image:
  repository: ywucontainer/hiresify
  pullPolicy: IfNotPresent
  tag: latest

ingress:
  enabled: false

resources:
  requests:
    cpu: 0.2
    memory: 256Mi
  limits:
    cpu: 0.5
    memory: 512Mi

service:
  type: NodePort
  port: 8000

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 2
  targetCPUUtilizationPercentage: 40
  targetMemoryUtilizationPercentage: 40

env:
  CONFIG_DIR: /run/secrets/hiresify.env
  DEPLOYMENT: development

volumes:
  - name: hiresify-config
    secret:
      secretName: hiresify-config
      optional: false

volumeMounts:
  - name: hiresify-config
    mountPath: /run/secrets/hiresify.env
    subPath: hiresify-config
    readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

minio:
  enabled: true
  fullnameOverride: minio

  image:
    registry: docker.io
    repository: bitnami/minio
    tag: 2025.7.23-debian-12-r3
    pullPolicy: IfNotPresent
    debug: false

  auth:
    existingSecret: minio-credentials
    rootUserSecretKey: minio-username
    rootPasswordSecretKey: minio-password

  mode: distributed

  containerPorts:
    minio: 9000

  resources:
    requests:
      cpu: 0.2
      memory: 256Mi
    limits:
      cpu: 0.5
      memory: 512Mi

  service:
    type: ClusterIP
    ports:
      minio: 9000

  persistence:
    enabled: true
    size: 8Gi

  console:
    image:
      registry: docker.io
      repository: bitnami/minio-object-browser
      tag: 2.0.2-debian-12-r3
      pullPolicy: IfNotPresent
      debug: false
    containerPorts:
      http: 9090
    resources:
      requests:
        cpu: 0.1
        memory: 128Mi
      limits:
        cpu: 0.2
        memory: 256Mi

postgresql:
  enabled: true
  fullnameOverride: postgresql

  image:
    registry: docker.io
    repository: bitnami/postgresql
    tag: 17.6.0-debian-12-r0
    pullPolicy: IfNotPresent
    debug: false

  auth:
    enablePostgresUser: true
    username: user
    database: hiresify
    replicationUsername: user
    existingSecret: postgresql-credentials
    secretKeys:
      adminPasswordKey: postgresql-password
      userPasswordKey: postgresql-password
      replicationPasswordKey: postgresql-password

  architecture: replication

  replication:
    synchronousCommit: "on"
    numSynchronousReplicas: 1
    applicationName: hiresify

  containerPorts:
    postgresql: 5432

  primary:
    extendedConfiguration: |
      # Logging
      logging_collector = on
      log_statement = 'ddl'
      log_min_duration_statement = 5000
      log_checkpoints = on
      log_connections = on
      log_disconnections = on

      # Memory & WAL
      shared_buffers = 128MB
      work_mem = 4MB
      maintenance_work_mem = 64MB
      effective_cache_size = 256MB
      wal_level = replica
      max_wal_senders = 10
      max_replication_slots = 10

      # Connections
      max_connections = 100
      idle_in_transaction_session_timeout = 10min

      # General safety
      hot_standby = on
      timezone = 'UTC'
    resources:
      requests:
        cpu: 0.2
        memory: 256Mi
      limits:
        cpu: 0.5
        memory: 512Mi
    service:
      type: ClusterIP
      ports:
        postgresql: 5432
    persistence:
      enabled: true
      volumeName: "pgdata"
      size: 8Gi

  readReplicas:
    extendedConfiguration: |
      # Logging
      logging_collector = on
      log_statement = 'ddl'
      log_min_duration_statement = 5000
      log_checkpoints = on
      log_connections = on
      log_disconnections = on

      # Memory & WAL
      shared_buffers = 128MB
      work_mem = 4MB
      maintenance_work_mem = 64MB
      effective_cache_size = 256MB
      wal_level = replica
      max_wal_senders = 10
      max_replication_slots = 10

      # Connections
      max_connections = 100
      idle_in_transaction_session_timeout = 10min

      # General safety
      hot_standby = on
      timezone = 'UTC'
    replicaCount: 1
    resources:
      requests:
        cpu: 0.1
        memory: 128Mi
      limits:
        cpu: 0.2
        memory: 256Mi
    service:
      type: ClusterIP
      ports:
        postgresql: 5432
    persistence:
      enabled: true
      volumeName: "pgdata"
      size: 8Gi

redis:
  enabled: true
  fullnameOverride: redis

  image:
    registry: docker.io
    repository: bitnami/redis
    tag: 8.2.1-debian-12-r0
    pullPolicy: IfNotPresent
    debug: false

  architecture: replication

  auth:
    enabled: true
    sentinel: true
    existingSecret: redis-credentials
    existingSecretPasswordKey: redis-password

  replica:
    replicaCount: 3
    configuration: |-
      save 60 1000
      appendonly no
      appendfsync everysec
      aof-use-rdb-preamble yes
    containerPorts:
      redis: 6379
    resources:
      requests:
        cpu: 0.2
        memory: 256Mi
      limits:
        cpu: 0.5
        memory: 512Mi
    persistence:
      enabled: true
      path: /data
      size: 2Gi
    service:
      type: ClusterIP
      ports:
        redis: 6379

  sentinel:
    enabled: true
    image:
      registry: docker.io
      repository: bitnami/redis-sentinel
      tag: 8.2.1-debian-12-r0
      pullPolicy: IfNotPresent
      debug: false
    quorum: 2
    getMasterTimeout: 90
    automateClusterRecovery: true
    redisShutdownWaitFailover: true
    downAfterMilliseconds: 60000
    failoverTimeout: 180000
    resources:
      requests:
        cpu: 0.05
        memory: 64Mi
      limits:
        cpu: 0.1
        memory: 256Mi
    service:
      type: ClusterIP
      ports:
        redis: 6379
        sentinel: 26379
